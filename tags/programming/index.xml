<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>programming on (Machine) Learning log.</title>
    <link>https://adamoudad.github.io/tags/programming/</link>
    <description>Recent content in programming on (Machine) Learning log.</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 22 Dec 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://adamoudad.github.io/tags/programming/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Run a command on a remote server with Emacs.</title>
      <link>https://adamoudad.github.io/posts/emacs/remote-command-ssh/</link>
      <pubDate>Thu, 22 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>https://adamoudad.github.io/posts/emacs/remote-command-ssh/</guid>
      <description>Being able to automate things with Emacs can be painfully hard at times, and ridiculously easy, once we get our hands on the right tool.
 Let&amp;#39;s illustrate this by solving the following problem with Emacs.
 How to run a command on a remote server?
  There are many commands, in Emacs, for running a subprocess or an inferior shell. For example
 process-file start-file-process start-process shell-command shell â€¦  In a following article, I plan to cover all of these commands to show in what they differ.</description>
    </item>
    
    <item>
      <title>Your python interpreter inside a docker container with Emacs</title>
      <link>https://adamoudad.github.io/posts/emacs/docker-python-shell-emacs/</link>
      <pubDate>Mon, 06 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://adamoudad.github.io/posts/emacs/docker-python-shell-emacs/</guid>
      <description>Emacs has this very powerful package Elpy which is usually recommended if you want to code in Python.
 Docker can containerize your Python interpreter so that you can seemlessly run your applications on any device.
 In Emacs with elpy installed, C-c C-c binding (C is for Control key) runs elpy-shell-send-region-to-buffer and is very handy for running on the fly python commands for testing your code. It actually use the content of the variable python-shell-interpreter for the python interpreter.</description>
    </item>
    
  </channel>
</rss>
